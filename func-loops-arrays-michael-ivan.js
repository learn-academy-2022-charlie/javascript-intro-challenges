// Write a function that takes in an array of numbers and returns an array with all numbers multiplied by 3.
var testArr1 = [3, 9, 15, 4, 10]
// //Expected Output: --> [9, 27, 45, 12, 30]

// Create a funciton with a for loop that will iterate on each element in an array of numbers and return a multiple of 3.

const mult3 = (testArray) => {
    let newArray = []
        // newArray is an empty array that will hold the elements generated by the for loop
    for (let i = 0; i < testArray.length; i++) {
        // (index starts at 0; ends at the end of the array length; iterate on each element)
        newArray.push(testArray[i] * 3)
        // the elements of testArry will be multiplied by 3 and each result will be pushed into the empty newArray
    }
    return newArray
        // this will show newArray filled in with all the elements multiplied by 3
}

// console.log(mult3(testArr1))
        // we should be able to add any array that is composed only of numbers into the argument for mult3 and return all the elements as multiples of 3


// Write a function that takes in an array of numbers and returns a new array with only odd numbers.
var testArr2 = [0, 2, -7, 3, 5, 8, 10, 13]
// // Expected Output: --> [-7, 3, 5, 13]
// Write a function that with a for loop that looks at every element in an array of numbers. It will then determine which numbers are odd using a modulo formula and return only those elements that are odd.

const oddArray = (array) => {
    let emptyArray = []
    // emptyArray is empty will have elements pushed into it later
    for (let i = 0; i < array.length; i++) {
        // start at index 0, end at the last element of the array, iterate each element
        if (array[i] % 2 === 1 || array[i] % 2 === -1) {
            // if the element in the array is odd (regardless if it's positive or negative)...
            emptyArray.push(array[i])}
            // ... then the element into emptyArray
        }
                return emptyArray
                // at the end of all the entire logic, show the results of emptyArray
}

console.log(oddArray(testArr2))
// Output: [ -7, 3, 5, 13 ]



// Write a function that takes in an array of numbers and letters and returns a string with only the letters. HINT: use the typeof method.
 var comboArr = [7, "n", true, "i", "c", 10, "e", -388, "w", 3, "o", 0, "r", false, "k"]


const lettersOnly = (array) => {
    for(let i = 0; i < array.length; i++){
    if(array[i] === string){
        lettersOnly.push(array)
    }
    }
}
    console.log(typeof 7)
        console.log(typeof "k")









// // --> "nicework"




// Create a function that takes in an array of numbers and returns the sum.
// var addThese1 = [1, 2, 3, 4]
// // --> 10

// var addThese2 = []
// // --> 0
// Create a function that takes in an array of numbers and returns the index of the largest number.
// var indexHighestNumber = [1, 4, 2, 3]
// // --> 1
// STRETCH Challenges

// Create a function that takes in two arrays and returns one array with no duplicate values.
// var arr1 = [3, 7, 10, 5, 4, 3, 3]
// var arr2 = [7, 8, 2, 3, 1, 5, 4]
// // --> [3, 7, 10, 5, 4, 8, 2, 1]
// Create a function that takes in two numbers as arguments and returns an array the length of the first number filled with the second number.
// var arrayLength = 6
// var arrayValue = 0
// // --> [0, 0, 0, 0, 0, 0]

// var arrayLength = 4
// var arrayValue = 11
// // --> [11, 11, 11, 11]
// Create a function that takes a number as an argument. Add up all the numbers from 1 to the number you passed to the function.
// var addUp1 = 4
// // 1 + 2 + 3 + 4 = 10
// // --> 10

// var addUp2 = 10
// // 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 = 55
// // --> 55

// var addUp3 = 600
// // --> 180300
// EPIC Challenges

// Create a function called highLow that takes in a number and returns whether the number is higher or lower than the "answer".
// Create an HTML page and link your JavaScript file. More info here.
// As a user, I see a prompt or input where I can guess a number between 1 and 100 (both inclusive).
// As a user, I can see if my guess is too high or too low.
// As a user, if I guess the "answer" correctly I am notified that I won.
// As a user, I can continue to guess the "answer" until I am correct.
// STRETCH: As a user, if I have not guessed the correct number in seven tries I see a losing message.